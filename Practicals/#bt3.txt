//bt3

// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

contract Bank {
    uint private bal;  // Changed to uint for non-negative balance

    // Event to log deposit and withdrawal actions
    event Deposit(address indexed from, uint amount);
    event Withdrawal(address indexed to, uint amount);

    // Constructor to initialize the balance
    constructor() {
        bal = 1;
    }

    // View function to get the balance
    function getBalance() public view returns (uint) {
        return bal;
    }

    // Function to withdraw an amount from the balance
    function withdraw(uint amt) public {
        require(amt > 0, "Withdrawal amount must be positive.");
        require(bal >= amt, "Insufficient balance.");
        bal -= amt;
        emit Withdrawal(msg.sender, amt); // Log the withdrawal
    }

    // Function to deposit an amount to the balance
    function deposit(uint amt) public {
        require(amt > 0, "Deposit amount must be positive.");
        bal += amt;
        emit Deposit(msg.sender, amt); // Log the deposit
    }
}